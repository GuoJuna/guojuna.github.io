(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{499:function(t,n,a){"use strict";a.r(n);var s=a(0),i=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"一-分布式事务产生的场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-分布式事务产生的场景"}},[t._v("#")]),t._v(" 一.分布式事务产生的场景")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("微服务之间通过远程调用完成事务操作\n"),n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2020/06/20200609173848.png",alt:""}})])]),t._v(" "),n("li",[n("p",[t._v("单体系统访问多个数据库实例\n"),n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2020/06/20200609173856.png",alt:""}})])]),t._v(" "),n("li",[n("p",[t._v("多服务访问同一个数据库实例\n"),n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2020/06/20200609173859.png",alt:""}})])])]),t._v(" "),n("h2",{attrs:{id:"二-分布式事务理论基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-分布式事务理论基础"}},[t._v("#")]),t._v(" 二.分布式事务理论基础")]),t._v(" "),n("h3",{attrs:{id:"_2-1-cap理论"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-cap理论"}},[t._v("#")]),t._v(" 2.1 CAP理论")]),t._v(" "),n("p",[t._v("CAP是Consistency、Availability、Partition tolerance三个词语的缩写，分别表示一致性、可用性、分区容忍\n性。\n"),n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2020/06/20200609174033.png",alt:""}}),t._v("\n整体执行流程如下：\n1、商品服务请求主数据库写入商品信息（添加商品、修改商品、删除商品）\n2、主数据库向商品服务响应写入成功。\n3、商品服务请求从数据库读取商品信息。")]),t._v(" "),n("p",[t._v("C - Consistency：\n一致性是指写操作后的读操作可以读取到最新的数据状态，当数据分布在多个节点上，从任意结点读取到的数据都\n是最新的状态。\n分布式系统一致性的特点：\n1、由于存在数据同步的过程，写操作的响应会有一定的延迟。\n2、为了保证数据一致性会对资源暂时锁定，待数据同步完成释放锁定资源。\n3、如果请求数据同步失败的结点则会返回错误信息，一定不会返回旧数据。")]),t._v(" "),n("p",[t._v("A - Availability ：\n可用性是指任何事务操作都可以得到响应结果，且不会出现响应超时或响应错误。\n分布式系统可用性的特点：\n1、所有请求都有响应，且不会出现响应超时或响应错误。")]),t._v(" "),n("p",[t._v("P - Partition tolerance\n通常分布式系统的各各结点部署在不同的子网，这就是网络分区，不可避免的会出现由于网络问题而导致结点之间\n通信失败，此时仍可对外提供服务，这叫分区容忍性。\n分布式分区容忍性的特点：\n1、分区容忍性分是布式系统具备的基本能力。")]),t._v(" "),n("p",[t._v("CAP是一个已经被证实的理论：一个分布式系统最多只能同时满足\n一致性（Consistency）、可用性（Availability）和分区容忍性（Partition tolerance）这三项中的两项。它可以作\n为我们进行架构设计、技术选型的考量标准。对于多数大型互联网应用的场景，结点众多、部署分散，而且现在的\n集群规模越来越大，所以节点故障、网络故障是常态，而且要保证服务可用性达到N个9（99.99..%），并要达到良\n好的响应性能来提高用户体验，因此一般都会做出如下选择：保证P和A，舍弃C强一致，保证最终一致性。")]),t._v(" "),n("h3",{attrs:{id:"_2-2-base理论"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-base理论"}},[t._v("#")]),t._v(" 2.2 BASE理论")]),t._v(" "),n("p",[t._v("BASE 是Basically Available(基本可用)、Soft state(软状态)和Eventually consistent (最终一致性)三个短语的缩\n写。BASE理论是对CAP中AP的一个扩展，通过牺牲强一致性来获得可用性，当出现故障允许部分不可用但要保证\n核心功能可用，允许数据在一段时间内是不一致的，但最终达到一致状态。满足BASE理论的事务，我们称之为“柔\n性事务”。")]),t._v(" "),n("ul",[n("li",[t._v("基本可用:分布式系统在出现故障时，允许损失部分可用功能，保证核心功能可用。如，电商网站交易付款出\n现问题了，商品依然可以正常浏览。")]),t._v(" "),n("li",[t._v('软状态:由于不要求强一致性，所以BASE允许系统中存在中间状态（也叫软状态），这个状态不影响系统可用\n性，如订单的"支付中"、“数据同步中”等状态，待数据最终一致后状态改为“成功”状态。')]),t._v(" "),n("li",[t._v('最终一致:最终一致是指经过一段时间后，所有节点数据都将会达到一致。如订单的"支付中"状态，最终会变\n为“支付成功”或者"支付失败"，使订单状态与实际交易结果达成一致，但需要一定时间的延迟、等待。')])]),t._v(" "),n("h3",{attrs:{id:"分布式id生成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式id生成"}},[t._v("#")]),t._v(" 分布式Id生成")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("数据库自增")])]),t._v(" "),n("li",[n("p",[t._v("uuid")])]),t._v(" "),n("li",[n("p",[t._v("借助全局redis")])]),t._v(" "),n("li",[n("p",[t._v("雪花算法")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2020/06/20200615114815.png",alt:"image-20200615114808886"}})])])]),t._v(" "),n("h4",{attrs:{id:"可靠消息一致性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可靠消息一致性"}},[t._v("#")]),t._v(" 可靠消息一致性")]),t._v(" "),n("p",[t._v("1.分布式场景系统中数据一致性问题如何解决 .\n2.分布式事务的设计思路分析.\n3.两阶段提交协议、三阶段提交协议。\n4.组合存储组件，分布式事务如何解决？\n5.TCC（Try Confirm Cancel）解决方案。\n6.消息队列+本地事件表+定时任务方案。\n7.自定义可靠消息服务方案。\n8.最大努力通知方案。")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2021/10/20211025212345.png",alt:"image-20211025212345629"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2021/10/20211025213404.png",alt:"image-20211025213404041"}})])])}),[],!1,null,null,null);n.default=i.exports}}]);