(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{677:function(t,n,a){"use strict";a.r(n);var e=a(0),s=Object(e.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("p",[t._v("有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次git status都会显示Untracked files ...，看着肯定不爽。")]),t._v(" "),n("p",[t._v("好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。")]),t._v(" "),n("h2",{attrs:{id:"文件规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件规则"}},[t._v("#")]),t._v(" 文件规则")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 以'#'开始的行，被视为注释.                                                                                                                          \n\n# 忽略掉所有文件名是 foo.txt的文件.\n\nfoo.txt\n\n# 忽略所有生成的 html文件,\n\n*.html\n\n# foo.html是手工维护的，所以例外.\n\n!foo.html\n\n# 忽略所有.o和 .a文件.\n\n*.[oa]\n配置语法：\n以斜杠“/”开头表示目录；\n以星号“*”通配多个字符；\n以问号“?”通配单个字符\n以方括号“[]”包含单个字符的匹配列表；\n以叹号“!”表示不忽略(跟踪)匹配到的文件或目录；\n")])])]),n("h2",{attrs:{id:"文件模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件模板"}},[t._v("#")]),t._v(" 文件模板")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("### gradle ###\n.gradle\n/build/\n!gradle/wrapper/gradle-wrapper.jar\n\n### STS ###\n.settings/\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\nbin/\n\n### IntelliJ IDEA ###\n/.idea/\n/private/\n/storage/\n/litemall.iml\n.checkstyle\n.idea\n*.iws\n*.iml\n*.ipr\nrebel.xml\n### maven ###\ntarget/\n*.war\n*.ear\n*.zip\n*.tar\n*.tar.gz\n\n### logs ####\n/logs/\n*.log\n\n### temp ignore ###\n*.cache\n*.diff\n*.patch\n*.tmp\n*.Java~\n*.properties~\n*.xml~\n\n### system ignore ###\n.DS_Store\nThumbs.db\nServers\n.metadata\nupload\ngen_code\n")])])]),n("h2",{attrs:{id:"其他"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("# 添加被忽略的文件,可以用-f强制添加到Git\ngit add -f App.class\n\n# 检查gitignore文件\ngit check-ignore -v App.class\n")])])]),n("h2",{attrs:{id:"gitignore-无效解决方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitignore-无效解决方法"}},[t._v("#")]),t._v(" .gitignore 无效解决方法")]),t._v(" "),n("p",[t._v("若没有生效，是因为gitignore只能忽略那些原来没有被 track 的文件，如果某些文件已经被纳入了版本管理中，则修改 .gitignore 是无效的。\n解决方法是先把本地缓存删除，然后再提交。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('git rm -r --cached .\ngit add .\ngit commit -m "update .gitignore"\ngit push -u origin master\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);