(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{486:function(a,t,e){"use strict";e.r(t);var i=e(0),n=Object(i.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"bigdecimal概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bigdecimal概述"}},[a._v("#")]),a._v(" BigDecimal概述")]),a._v(" "),t("p",[a._v("Java在java.math包中提供的API类BigDecimal，用来对超过16位有效位的数进行精确的运算。双精度浮点型变量double可以处理16位有效数，但在实际应用中，可能需要对更大或者更小的数进行运算和处理。")]),a._v(" "),t("p",[a._v("一般情况下，对于不需要准确计算精度的数字，可以直接使用Float和Double处理，但是Double.valueOf(String) 和Float.valueOf(String)会丢失精度。所以如果需要精确计算的结果，则必须使用BigDecimal类来操作。")]),a._v(" "),t("p",[a._v("BigDecimal对象提供了传统的+、-、*、/等算术运算符对应的方法，通过这些方法进行相应的操作。BigDecimal都是不可变的（immutable）的， 在进行每一次四则运算时，都会产生一个新的对象 ，所以在做加减乘除运算时要记得要保存操作后的值。")]),a._v(" "),t("h2",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[a._v("#")]),a._v(" 注意事项")]),a._v(" "),t("h3",{attrs:{id:"_1-浮点类型的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-浮点类型的问题"}},[a._v("#")]),a._v(" 1. 浮点类型的问题")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  @Test\n  public void test1(){\n    BigDecimal a = new BigDecimal(0.01);\n    BigDecimal b = BigDecimal.valueOf(0.01);\n    System.out.println("a = " + a);\n    System.out.println("b = " + b);\n  }\n')])])]),t("p",[a._v("执行结果:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("a = 0.01000000000000000020816681711721685132943093776702880859375\nb = 0.01\n")])])]),t("p",[a._v("原因")]),a._v(" "),t("blockquote",[t("p",[a._v("由于计算机的资源是有限的，所以是没办法用二进制精确的表示 0.1，只能用「近似值」来表示，就是在有限的精度情况下，最大化接近 0.1 的二进制数，于是就会造成精度缺失的情况。"),t("br"),a._v("\n在使用BigDecimal构造函数时，尽量传递字符串而非浮点类型；如果无法满足前面，则可采用BigDecimal#valueOf方法来构造初始化值。")])]),a._v(" "),t("h3",{attrs:{id:"_2-浮点精度的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-浮点精度的问题"}},[a._v("#")]),a._v(" 2. 浮点精度的问题")]),a._v(" "),t("p",[a._v("如果比较两个BigDecimal的值是否相等，你会如何比较？使用equals方法还是compareTo方法呢？")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  @Test\n  public void test2(){\n    BigDecimal a = new BigDecimal("0.01");\n    BigDecimal b = new BigDecimal("0.010");\n    System.out.println(a.equals(b));\n    System.out.println(a.compareTo(b));\n  }\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("false\ntrue\n")])])]),t("p",[a._v("结论:")]),a._v(" "),t("blockquote",[t("p",[a._v("因为equals方法不仅比较了值是否相等，还比较了精度是否相同。通常情况，如果比较两个BigDecimal值的大小，采用其实现的compareTo方法；如果严格限制精度的比较，那么则可考虑使用equals方法。")])]),a._v(" "),t("h3",{attrs:{id:"_3-设置精度的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-设置精度的问题"}},[a._v("#")]),a._v(" 3. 设置精度的问题")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  @Test\n  public void test3(){\n    BigDecimal a = new BigDecimal("1.0");\n    BigDecimal b = new BigDecimal("3.0");\n    a.divide(b);\n  }\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.\n  at java.math.BigDecimal.divide(BigDecimal.java:1690)\n  ...\n")])])]),t("p",[a._v("原因:")]),a._v(" "),t("blockquote",[t("p",[a._v("如果在除法（divide）运算过程中，如果商是一个无限小数（0.333…），而操作的结果预期是一个精确的数字，那么将会抛出ArithmeticException异常。")])]),a._v(" "),t("p",[a._v("修改:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('  @Test\n  public void test3(){\n    BigDecimal a = new BigDecimal("1.0");\n    BigDecimal b = new BigDecimal("3.0");\n    BigDecimal c = a.divide(b, 2,RoundingMode.HALF_UP);\n    System.out.println(c);\n  }\n')])])]),t("p",[a._v("结论:")]),a._v(" "),t("blockquote",[t("p",[a._v("在使用BigDecimal进行（所有）运算时，一定要明确指定精度和舍入模式。")])]),a._v(" "),t("p",[a._v("8种舍入模式:")]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.UP")])]),a._v(" "),t("blockquote",[t("p",[a._v("舍入远离零的舍入模式。在丢弃非零部分之前始终增加数字(始终对非零舍弃部分前面的数字加1)。注意，此舍入模式始终不会减少计算值的大小。")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.DOWN")])]),a._v(" "),t("blockquote",[t("p",[a._v("接近零的舍入模式。在丢弃某部分之前始终不增加数字(从不对舍弃部分前面的数字加1，即截短)。注意，此舍入模式始终不会增加计算值的大小。")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.CEILING")])]),a._v(" "),t("blockquote",[t("p",[a._v("接近正无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUNDUP 相同;如果为负，则舍入行为与 ROUNDDOWN 相同。注意，此舍入模式始终不会减少计算值。")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.FLOOR")])]),a._v(" "),t("blockquote",[t("p",[a._v("接近负无穷大的舍入模式。如果 BigDecimal 为正，则舍入行为与 ROUNDDOWN 相同;如果为负，则舍入行为与 ROUNDUP 相同。注意，此舍入模式始终不会增加计算值。")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.HALF_UP")])]),a._v(" "),t("blockquote",[t("p",[a._v("向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为向上舍入的舍入模式。如果舍弃部分 >= 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同。注意，这是我们在小学时学过的舍入模式(四舍五入)。")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.HALF_DOWN")])]),a._v(" "),t("blockquote",[t("p",[a._v("向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则为上舍入的舍入模式。如果舍弃部分 > 0.5，则舍入行为与 ROUND_UP 相同;否则舍入行为与 ROUND_DOWN 相同(五舍六入)。")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.HALF_EVEN")])]),a._v(" "),t("blockquote",[t("p",[a._v("向“最接近的”数字舍入，如果与两个相邻数字的距离相等，则向相邻的偶数舍入。如果舍弃部分左边的数字为奇数，则舍入行为与 ROUNDHALFUP 相同;如果为偶数，则舍入行为与 ROUNDHALF_DOWN 相同。注意，在重复进行一系列计算时，此舍入模式可以将累加错误减到最小。此舍入模式也称为“银行家舍入法”，主要在美国使用。四舍六入，五分两种情况。如果前一位为奇数，则入位，否则舍去。以下例子为保留小数点1位，那么这种舍入方式下的结果。1.15 ==> 1.2 ,1.25 ==> 1.2")])]),a._v(" "),t("ul",[t("li",[a._v("RoundingMode.UNNECESSARY")])]),a._v(" "),t("blockquote",[t("p",[a._v("断言请求的操作具有精确的结果，因此不需要舍入。如果对获得精确结果的操作指定此舍入模式，则抛出ArithmeticException。\n"),t("a",{attrs:{title:"",href:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2022-09-09-1uYbz8.png"}},[t("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2022-09-09-1uYbz8.png",alt:""}})])])]),a._v(" "),t("h3",{attrs:{id:"_3-三种字符串输出的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-三种字符串输出的问题"}},[a._v("#")]),a._v(" 3. 三种字符串输出的问题")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("@Test\npublic void test4(){\n  BigDecimal a = BigDecimal.valueOf(35634535255456719.22345634534124578902);\n  System.out.println(a.toString());\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("3.563453525545672E+16\n")])])]),t("p",[a._v("BigDecimal转换字符串的三个方法")]),a._v(" "),t("ul",[t("li",[a._v("toPlainString()：不使用任何科学计数法；")]),a._v(" "),t("li",[a._v("toString()：在必要的时候使用科学计数法；")]),a._v(" "),t("li",[a._v("toEngineeringString() ：在必要的时候使用工程计数法。类似于科学计数法，只不过指数的幂都是3的倍数，这样方便工程上的应用，因为在很多单位转换的时候都是10^3；\n"),t("a",{attrs:{title:"",href:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2022-09-09-RDyc1G.png"}},[t("img",{attrs:{src:"https://gj-blog.oss-cn-hangzhou.aliyuncs.com/blog-img/2022-09-09-RDyc1G.png",alt:""}})])])]),a._v(" "),t("p",[a._v("结论:")]),a._v(" "),t("blockquote",[t("p",[a._v("根据数据结果展示格式不同，采用不同的字符串输出方法，通常使用比较多的方法为toPlainString() 。")])]),a._v(" "),t("p",[a._v("另外，NumberFormat类的format()方法可以使用BigDecimal对象作为其参数，可以利用BigDecimal对超出16位有效数字的货币值，百分值，以及一般数值进行格式化控制。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('NumberFormat currency = NumberFormat.getCurrencyInstance(); //建立货币格式化引用\nNumberFormat percent = NumberFormat.getPercentInstance();  //建立百分比格式化引用\npercent.setMaximumFractionDigits(3); //百分比小数点最多3位\n\nBigDecimal loanAmount = new BigDecimal("15000.48"); //金额\nBigDecimal interestRate = new BigDecimal("0.008"); //利率\nBigDecimal interest = loanAmount.multiply(interestRate); //相乘\n\nSystem.out.println("金额:\\t" + currency.format(loanAmount));\nSystem.out.println("利率:\\t" + percent.format(interestRate));\nSystem.out.println("利息:\\t" + currency.format(interest));\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("金额: ￥15,000.48 \n利率: 0.8% \n利息: ￥120.00\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);