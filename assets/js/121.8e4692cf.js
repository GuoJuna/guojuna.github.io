(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{530:function(t,r,a){"use strict";a.r(r);var s=a(0),e=Object(s.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),r("p",[t._v("在JS逆向过程当中，获取用发F12抓取XHR的时候，常常会发现网页不让我们打开F12开发人员工具。如果这个时候我们开启工具中禁止断点之后，虽然我们可以抓取xhr，但是这样我们无法调试代码部分了，开启了禁止断点之后，我们自己也无法在代码当中下断点了")]),t._v(" "),r("h2",{attrs:{id:"解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),r("ul",[r("li",[t._v('方法 1.  直接 "从不在此处断点"')]),t._v(" "),r("li",[t._v("方法 2.  查看调用堆栈，把进入无限 debugger 的那个函数在console中重新定义，把函数置空")]),t._v(" "),r("li",[t._v("方法 3.  通过中间人攻击，替换 JavaScript 代码文件成本地文件，在本地文件中把 无限debugger 功能去掉（ 注释掉 ）。\n这种方法可以进行本地断点调试，和实时验证逆向的代码逻辑")])])])}),[],!1,null,null,null);r.default=e.exports}}]);